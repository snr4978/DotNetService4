<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kean.Presentation.Rest</name>
    </assembly>
    <members>
        <member name="T:Kean.Presentation.Rest.Controllers.RolesController">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.RolesController.#ctor(Kean.Application.Command.Interfaces.IAdminService,Kean.Application.Query.Interfaces.IAdminService)">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.RolesController.GetList(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            获取角色列表
            </summary>
            <response code="200">成功</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.RolesController.Create(Kean.Application.Command.ViewModels.Role)">
            <summary>
            创建角色
            </summary>
            <response code="201">成功</response>
            <response code="409">角色已存在</response>
            <response code="422">请求内容错误</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.RolesController.Modify(System.Int32,Kean.Application.Command.ViewModels.Role)">
            <summary>
            修改角色
            </summary>
            <response code="200">成功</response>
            <response code="409">角色已存在</response>
            <response code="410">角色已删除</response>
            <response code="422">请求内容错误</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.RolesController.Batch(Kean.Presentation.Rest.Batch{System.Int32})">
            <summary>
            批量处理角色
            </summary>
            <response code="200">成功</response>
            <response code="405">方法不支持</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.RolesController.MenuPermission(System.Int32)">
            <summary>
            获取角色菜单
            </summary>
            <response code="200">成功</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.RolesController.MenuPermission(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            设置角色菜单
            </summary>
            <response code="200">成功</response>
            <response code="410">角色已删除</response>
            <response code="422">请求内容错误</response>
        </member>
        <member name="T:Kean.Presentation.Rest.Controllers.SessionsController">
            <summary>
            会话服务
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.SessionsController.#ctor(Kean.Application.Command.Interfaces.IIdentityService)">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.SessionsController.Login(Kean.Application.Command.ViewModels.User,System.String,System.String)">
            <summary>
            创建资源（登录）
            </summary>
            <response code="201">成功</response>
            <response code="401">账号或密码错误</response>
            <response code="423">账号被冻结</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.SessionsController.Logout(System.String,System.String)">
            <summary>
            删除资源（注销）
            </summary>
            <response code="204">成功</response>
        </member>
        <member name="T:Kean.Presentation.Rest.Controllers.UsersController">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.#ctor(Kean.Application.Command.Interfaces.IAdminService,Kean.Application.Query.Interfaces.IAdminService,Kean.Application.Command.Interfaces.IIdentityService,Kean.Application.Query.Interfaces.IIdentityService,Kean.Application.Command.Interfaces.IMessageService,Kean.Application.Query.Interfaces.IMessageService)">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.GetProfile(System.Int32)">
            <summary>
            获取当前用户
            </summary>
            <response code="200">成功</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.ModifyAvatar(Kean.Application.Command.ViewModels.User,System.Int32)">
            <summary>
            修改当前用户的头像
            </summary>
            <response code="200">成功</response>
            <response code="422">图像内容错误</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.InitializePassword(Kean.Application.Command.ViewModels.Password,System.Int32)">
            <summary>
            初始化当前用户的密码
            </summary>
            <response code="201">成功</response>
            <response code="405">密码已经初始化，不允许操作</response>
            <response code="422">密码格式错误</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.ModifyPassword(Kean.Application.Command.ViewModels.Password,System.Int32)">
            <summary>
            修改当前用户的密码
            </summary>
            <response code="200">成功</response>
            <response code="422">原密码错误或新密码格式错误</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.GetMenu(System.Int32)">
            <summary>
            获取当前用户菜单
            </summary>
            <response code="200">成功</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.CheckPermission(System.String,System.String)">
            <summary>
            当前用户对指定路由的访问权限
            </summary>
            <response code="200">成功</response>
            <response code="403">没有权限</response>
            <response code="419">密码失效</response>
            <response code="428">密码未初始化</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.GetMessageList(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            获取当前用户消息
            </summary>
            <response code="200">成功</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.GetMessageItem(System.Int32,System.Int32)">
            <summary>
            获取当前用户消息内容
            </summary>
            <response code="200">成功</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.BatchMessage(Kean.Presentation.Rest.Batch{Kean.Application.Command.ViewModels.Message},System.Int32)">
            <summary>
            批量处理消息
            </summary>
            <response code="200">成功</response>
            <response code="405">方法不支持</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.GetList(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            获取角色列表
            </summary>
            <response code="200">成功</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.Create(Kean.Application.Command.ViewModels.User)">
            <summary>
            创建用户
            </summary>
            <response code="201">成功</response>
            <response code="409">用户已存在</response>
            <response code="422">请求内容错误</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.Modify(System.Int32,Kean.Application.Command.ViewModels.User)">
            <summary>
            修改用户
            </summary>
            <response code="200">成功</response>
            <response code="409">用户已存在</response>
            <response code="410">用户已删除</response>
            <response code="422">请求内容错误</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.Batch(Kean.Presentation.Rest.Batch{System.Int32})">
            <summary>
            批量处理用户
            </summary>
            <response code="200">成功</response>
            <response code="405">方法不支持</response>
        </member>
        <member name="M:Kean.Presentation.Rest.Controllers.UsersController.ResetPassword(System.Int32)">
            <summary>
            重置密码
            </summary>
            <response code="204">成功</response>
            <response code="410">角色已删除</response>
            <response code="422">请求内容错误</response>
        </member>
        <member name="T:Kean.Presentation.Rest.Hubs.IdentityHub">
            <summary>
            在线集线器
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Hubs.IdentityHub.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{Kean.Presentation.Rest.Hubs.IdentityHub},Kean.Application.Command.Interfaces.IIdentityService)">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.Hubs.MessageHub">
            <summary>
            消息集线器
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Hubs.MessageHub.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{Kean.Presentation.Rest.Hubs.MessageHub},Kean.Application.Command.Interfaces.IMessageService)">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.Program">
            <summary>
            应用程序入口
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Program.Main(System.String[])">
            <summary>
            入口
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Program.CreateHostBuilder(System.String[])">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.ActionFilter">
            <summary>
            全局操作过滤器
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            在调用操作方法之前发生
            </summary>
            <param name="context">操作上下文</param>
        </member>
        <member name="M:Kean.Presentation.Rest.ActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            在调用操作方法之后发生
            </summary>
            <param name="context">操作执行的上下文</param>
        </member>
        <member name="T:Kean.Presentation.Rest.AnonymousAttribute">
            <summary>
            指示 Action 允许匿名访问，不进行身份验证
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.ApplicationBuilderExtensions">
            <summary>
            ApplicationBuilder 扩展方法
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ApplicationBuilderExtensions.UseSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            注册 Swagger 及 UI 中间件
            </summary>
            <param name="app">应用程序管道</param>
            <returns>应用程序管道</returns>
        </member>
        <member name="M:Kean.Presentation.Rest.ApplicationBuilderExtensions.UseAuthentication(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            注册身份验证中间件
            </summary>
            <param name="app">应用程序管道</param>
            <returns>应用程序管道</returns>
        </member>
        <member name="M:Kean.Presentation.Rest.ApplicationBuilderExtensions.UseBlacklist(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            注册黑名单中间件
            </summary>
            <param name="app">应用程序管道</param>
            <returns>应用程序管道</returns>
        </member>
        <member name="T:Kean.Presentation.Rest.AuthenticationMiddleware">
            <summary>
            身份验证中间件
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.AuthenticationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            初始化 Kean.Presentation.Rest.AuthenticationMiddleware 类的新实例
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.AuthenticationMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,System.IServiceProvider,Kean.Application.Command.Interfaces.IIdentityService)">
            <summary>
            执行方法
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.BackgroundService`1">
            <summary>
            后台任务基类
            </summary>
            <typeparam name="T">后台任务类型</typeparam>
        </member>
        <member name="M:Kean.Presentation.Rest.BackgroundService`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Kean.Presentation.Rest.BackgroundService{`0}})">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="P:Kean.Presentation.Rest.BackgroundService`1.Service">
            <summary>
            获取实例
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.BackgroundServiceOptions">
            <summary>
            后台任务选项
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.BackgroundServiceOptions.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            初始化 Kean.Presentation.Rest.BackgroundServiceOptions 的新实例
            </summary>
            <param name="services">服务描述符</param>
        </member>
        <member name="M:Kean.Presentation.Rest.BackgroundServiceOptions.Host``1">
            <summary>
            寄宿后台任务
            </summary>
            <typeparam name="T">后台任务类型</typeparam>
        </member>
        <member name="T:Kean.Presentation.Rest.BadRequestFallbackAttribute">
            <summary>
            指示 Action 请求内容出错时，可以返回指定的友好信息
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.BadRequestFallbackAttribute.#ctor(System.Type)">
            <summary>
            初始化 Kean.Presentation.Rest.BadRequestFallbackAttribute 类的新实例
            </summary>
            <param name="type">返回类型：可以是 Microsoft.AspNetCore.Mvc.IActionResult 的实现，也可以是一个对象类型</param>
        </member>
        <member name="M:Kean.Presentation.Rest.BadRequestFallbackAttribute.Result">
            <summary>
            得到一个 Microsoft.AspNetCore.Mvc.IActionResult 的实例
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.Batch`1">
            <summary>
            Restful Api 批量操作资源时的数据结构
            </summary>
            <typeparam name="T">项目数据类型</typeparam>
        </member>
        <member name="P:Kean.Presentation.Rest.Batch`1.Method">
            <summary>
            获取操作方法
            </summary>
        </member>
        <member name="P:Kean.Presentation.Rest.Batch`1.Data">
            <summary>
            获取或设置数据
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.BatchMethod">
            <summary>
            Restful Api 批量操作资源的方法
            </summary>
        </member>
        <member name="F:Kean.Presentation.Rest.BatchMethod.Create">
            <summary>
            创建资源
            </summary>
        </member>
        <member name="F:Kean.Presentation.Rest.BatchMethod.Update">
            <summary>
            更新资源
            </summary>
        </member>
        <member name="F:Kean.Presentation.Rest.BatchMethod.Delete">
            <summary>
            删除资源
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.BlacklistMiddleware">
            <summary>
            黑名单中间件
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.BlacklistMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            初始化 Kean.Presentation.Rest.BlacklistMiddleware 类的新实例
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.BlacklistMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Kean.Application.Query.Interfaces.IAppService)">
            <summary>
            执行方法
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.ConfigurationProvider">
            <summary>
            配置文件的取值方式
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化 Kean.Presentation.Rest.ConfigurationProvider 类的新实例
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.ConfigurationSource">
            <summary>
            配置文件来源
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ConfigurationSource.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化 Kean.Presentation.Rest.ConfigurationSource 类的新实例
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.CustomAuthentication">
            <summary>
            自定义身份认证程序
            </summary>
        </member>
        <member name="P:Kean.Presentation.Rest.CustomAuthentication.ServiceProvider">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.CustomAuthentication.Authenticate(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            身份认证
            </summary>
            <param name="context">Http 上下文</param>
            <returns>如果认证成功，返回 True；否则返回 False</returns>
        </member>
        <member name="T:Kean.Presentation.Rest.CustomAuthenticationAttribute">
            <summary>
            指示 Controller 或 Action 需要按照指定的方式进行身份验证
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.CustomAuthenticationAttribute.#ctor(System.Type)">
            <summary>
            初始化 Kean.Presentation.Rest.CustomAuthenticationAttribute 类的新实例
            </summary>
            <param name="type">身份认证程序类型（该类型需要实现 CustomAuthentication 类）</param>
        </member>
        <member name="P:Kean.Presentation.Rest.CustomAuthenticationAttribute.Type">
            <summary>
            身份认证程序类型
            该类型需要实现 CustomAuthentication 类
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.CustomAuthenticationAttribute.Authenticate(Microsoft.AspNetCore.Http.HttpContext,System.IServiceProvider)">
            <summary>
            身份认证
            </summary>
            <param name="context">Http 上下文</param>
            <param name="serviceProvider">容器</param>
            <returns>如果认证成功，返回 True；否则返回 False</returns>
        </member>
        <member name="T:Kean.Presentation.Rest.ExceptionFilter">
            <summary>
            全局异常过滤器
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ExceptionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Kean.Presentation.Rest.ExceptionFilter})">
            <summary>
            初始化 Kean.Presentation.Rest.ExceptionFilter 类的新实例
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            出现异常时发生
            </summary>
            <param name="context">发生异常的上下文</param>
        </member>
        <member name="T:Kean.Presentation.Rest.FallbackAttribute">
            <summary>
            指示 Action 上下文异常时，可以返回指定的友好信息
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.FallbackAttribute.#ctor(System.Type)">
            <summary>
            初始化 Kean.Presentation.Rest.FallbackAttribute 类的新实例
            </summary>
            <param name="type">返回类型：可以是 Microsoft.AspNetCore.Mvc.IActionResult 的实现，也可以是一个对象类型</param>
        </member>
        <member name="P:Kean.Presentation.Rest.FallbackAttribute.Type">
            <summary>
            返回类型：可以是 Microsoft.AspNetCore.Mvc.IActionResult 的实现，也可以是一个对象类型
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.FallbackAttribute.Result(System.Object[])">
            <summary>
            得到一个 Microsoft.AspNetCore.Mvc.IActionResult 的实例
            </summary>
            <param name="args">构造参数</param>
            <returns>结果实例</returns>
        </member>
        <member name="T:Kean.Presentation.Rest.FromFileAttribute">
            <summary>
            指定参数仅来自文件上传
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.FromFileAttribute.#ctor">
            <summary>
            初始化 Kean.Presentation.Rest.FromFileAttribute 类的新实例
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.FromFileAttribute.ModelBinder">
            <summary>
            实体绑定器
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.FromMemberAttribute">
            <summary>
            指定参数仅来自传入的实体成员
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.FromMemberAttribute.#ctor">
            <summary>
            初始化 Kean.Presentation.Rest.FromMemberAttribute 类的新实例
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.FromMemberAttribute.ModelBinder">
            <summary>
            实体绑定器
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.FromMiddlewareAttribute">
            <summary>
            指定参数仅来自中间件
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.ServerErrorFallbackAttribute">
            <summary>
            指示 Action 发生服务器内部错误时，可以返回指定的友好信息
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ServerErrorFallbackAttribute.#ctor(System.Type)">
            <summary>
            初始化 Kean.Presentation.Rest.ServerErrorFallbackAttribute 类的新实例
            </summary>
            <param name="type">返回类型：可以是 Microsoft.AspNetCore.Mvc.IActionResult 的实现，也可以是一个对象类型（这个类型需要包含一个仅接受 System.Exception 参数的构造函数）</param>
        </member>
        <member name="M:Kean.Presentation.Rest.ServerErrorFallbackAttribute.Result(System.Exception)">
            <summary>
            得到一个 Microsoft.AspNetCore.Mvc.IActionResult 的实例
            </summary>
            <param name="exception">异常信息</param>
        </member>
        <member name="T:Kean.Presentation.Rest.ServiceCollectionExtensions">
            <summary>
            ServiceCollection 扩展方法
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.ServiceCollectionExtensions.Startup(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            向服务描述中追加启动过滤
            </summary>
            <param name="services">服务描述符</param>
            <returns>服务描述符</returns>
        </member>
        <member name="M:Kean.Presentation.Rest.ServiceCollectionExtensions.Add``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            向服务描述中追加配置类型
            </summary>
            <typeparam name="T">包含配置操作的类型</typeparam>
            <param name="services">服务描述符</param>
            <returns>服务描述符</returns>
        </member>
        <member name="M:Kean.Presentation.Rest.ServiceCollectionExtensions.AddControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            对 Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllers 的扩展，固化一些 IMvcBuilder 的后续操作
            </summary>
            <param name="services">服务描述符</param>
            <param name="configure">配置选项</param>
            <returns>服务描述符</returns>
        </member>
        <member name="M:Kean.Presentation.Rest.ServiceCollectionExtensions.AddBackground(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Kean.Presentation.Rest.BackgroundServiceOptions})">
            <summary>
            向服务描述中追加后台任务配置
            </summary>
            <param name="services">服务描述符</param>
            <param name="configure">配置选项</param>
            <returns>服务描述符</returns>
        </member>
        <member name="T:Kean.Presentation.Rest.StartupFilter">
            <summary>
            应用启动过滤器
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.StartupFilter.#ctor(System.IServiceProvider)">
            <summary>
            初始化 Kean.Presentation.Rest.StartupFilter 类的新实例
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.StartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            启动任务
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.SwaggerFilter">
            <summary>
            Swagger UI 过滤器
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.TextPlainInputFormatter">
            <summary>
            Content-Type: text/plain 输入支持
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.TextPlainInputFormatter.#ctor">
            <summary>
            初始化 Kean.Presentation.Rest.TextPlainInputFormatter 类的新实例
            </summary>
        </member>
        <member name="T:Kean.Presentation.Rest.Startup">
            <summary>
            应用程序启动类
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化 Kean.Presentation.Rest.Startup 类的新实例
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Startup.DependencyInject(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            将服务添加到容器
            </summary>
        </member>
        <member name="M:Kean.Presentation.Rest.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            配置 HTTP 请求管道
            </summary>
        </member>
    </members>
</doc>
